-- <T>LAPACK version 0.1.1
-- Submodule update
-- Catch2 not found. Trying to fetch from https://github.com/catchorg/Catch2.git. It may take a while.
-- Using Catch2 from https://github.com/catchorg/Catch2.git.
-- testBLAS version 0.1.2
-- Catch2 not found. Trying to fetch from https://github.com/catchorg/Catch2.git. It may take a while.
-- Using Catch2 from https://github.com/catchorg/Catch2.git.
-- Configuring done
-- Generating done
-- Build files have been written to: /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build
[1/6] Building CXX object test/src/CMakeFiles/test_eispack_comqr_schurToEigen.dir/test_eispack_comqr_schurToEigen.cpp.o
FAILED: test/src/CMakeFiles/test_eispack_comqr_schurToEigen.dir/test_eispack_comqr_schurToEigen.cpp.o 
/usr/bin/c++ -DTLAPACK_CHECK_INPUT -I/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/../include -I/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/.. -I/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/generated-includes -I/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include -I/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/include  -MD -MT test/src/CMakeFiles/test_eispack_comqr_schurToEigen.dir/test_eispack_comqr_schurToEigen.cpp.o -MF test/src/CMakeFiles/test_eispack_comqr_schurToEigen.dir/test_eispack_comqr_schurToEigen.cpp.o.d -o test/src/CMakeFiles/test_eispack_comqr_schurToEigen.dir/test_eispack_comqr_schurToEigen.cpp.o -c /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:18:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp: In instantiation of ‘int tlapack::getri(matrix_t&, const vector_t&, const getri_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:216:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: error: no matching function for call to ‘col(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>&, const __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&)’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/../include/testdefinitions.hpp:20,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/../include/testutils.hpp:13,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:13:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note: candidate: ‘constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:75: note:   no known conversion for argument 2 from ‘const __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘const std::complex<float>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp: In instantiation of ‘int tlapack::getri(matrix_t&, const vector_t&, const getri_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:216:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: error: no matching function for call to ‘col(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>&, const __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&)’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note: candidate: ‘constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:75: note:   no known conversion for argument 2 from ‘const __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘const std::complex<double>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp: In instantiation of ‘int tlapack::getri(matrix_t&, const vector_t&, const getri_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:216:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: error: no matching function for call to ‘col(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>&, const __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&)’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note: candidate: ‘constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:109: note:   no known conversion for argument 2 from ‘const __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘const std::complex<float>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp: In instantiation of ‘int tlapack::getri(matrix_t&, const vector_t&, const getri_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:216:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: error: no matching function for call to ‘col(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>&, const __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&)’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  308 |     col( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:308:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getri.hpp:91:40: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
   91 |                 auto vect2=tlapack::col(A,Piv[j]);
      |                            ~~~~~~~~~~~~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:5: note: candidate: ‘constexpr auto tlapack::col(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:316:109: note:   no known conversion for argument 2 from ‘const __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘const std::complex<double>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  316 |     col( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> colIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:16,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:19:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp: In instantiation of ‘int tlapack::getrf_recursive(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:70:35:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:79:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
   79 |             if( A(Piv[0],0) == real_t(0) ){
      |                 ~^~~~~~~~~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:12:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:95:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
   95 |             if( A(Piv[0],0) == real_t(0) )
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/iosfwd:40,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_source_line_info.hpp:12,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_assertion_info.hpp:12,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_assertion_handler.hpp:11,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_test_macro_impl.hpp:12,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_test_macros.hpp:11,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_template_test_macros.hpp:20,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:10:
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/string:41,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_stringref.hpp:12,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_assertion_info.hpp:13:
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/string:47:
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/bits/stl_algobase.h:64,
                 from /usr/include/c++/12.2.1/string:50:
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/bits/basic_string.h:47,
                 from /usr/include/c++/12.2.1/string:53:
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/vector:64,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_tostring.hpp:12,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_decomposer.hpp:11,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_assertion_handler.hpp:12:
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/bits/locale_facets.h:48,
                 from /usr/include/c++/12.2.1/bits/basic_ios.h:37,
                 from /usr/include/c++/12.2.1/ios:44,
                 from /usr/include/c++/12.2.1/ostream:38,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/internal/catch_reusable_string_stream.hpp:15,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/catch_tostring.hpp:20:
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/build/_deps/catch2-src/src/catch2/../catch2/generators/catch_generators.hpp:20,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:11:
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/types.hpp:11,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:11:
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/functional:59,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/eispack_hqr.hpp:15,
                 from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:22:
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/unordered_map:47,
                 from /usr/include/c++/12.2.1/functional:61:
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/functional:63:
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
In file included from /usr/include/c++/12.2.1/bits/ios_base.h:46,
                 from /usr/include/c++/12.2.1/ios:42:
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:100:29: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
  100 |                 std::swap( A(Piv[0],0), A(0,0) );
      |                            ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>&, __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&)’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<float>’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::fpos<_StateT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::allocator<_CharT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::pair<_T1, _T2>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::tuple<_UTypes ...>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::array<_Tp, _Nm>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>&, std::complex<float>&)’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘std::complex<float>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<float>’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::fpos<_StateT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::allocator<_CharT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::pair<_T1, _T2>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::tuple<_UTypes ...>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::array<_Tp, _Nm>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>&, std::complex<float>&)’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘std::complex<float>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
In file included from /home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:15:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp: In instantiation of ‘int tlapack::getrf_level0(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:72:32:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:77:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   77 |             if (A(Piv[j],j)==real_t(0)){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:86:30: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   86 |                     A(j,i)= A(Piv[j],i);
      |                             ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:87:22: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   87 |                     A(Piv[j],i)= tmp;
      |                     ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp: In instantiation of ‘int tlapack::getrf_recursive(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:70:35:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:79:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
   79 |             if( A(Piv[0],0) == real_t(0) ){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:95:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
   95 |             if( A(Piv[0],0) == real_t(0) )
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:100:29: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
  100 |                 std::swap( A(Piv[0],0), A(0,0) );
      |                            ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>&, __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&)’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<double>’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::fpos<_StateT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::allocator<_CharT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::pair<_T1, _T2>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::tuple<_UTypes ...>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::array<_Tp, _Nm>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>&, std::complex<double>&)’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘std::complex<double>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<double>’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::fpos<_StateT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::allocator<_CharT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::pair<_T1, _T2>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::tuple<_UTypes ...>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::array<_Tp, _Nm>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>&, std::complex<double>&)’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> > = long unsigned int]’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:75: note:   no known conversion for argument 2 from ‘std::complex<double>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor> >’ {aka ‘long unsigned int’}
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >)’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: note:   template argument ‘tlapack::Layout::ColMajor’ does not match ‘tlapack::Layout::RowMajor’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp: In instantiation of ‘int tlapack::getrf_level0(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:72:32:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:77:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   77 |             if (A(Piv[j],j)==real_t(0)){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:86:30: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   86 |                     A(j,i)= A(Piv[j],i);
      |                             ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:87:22: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   87 |                     A(Piv[j],i)= tmp;
      |                     ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::ColMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp: In instantiation of ‘int tlapack::getrf_recursive(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:70:35:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:79:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
   79 |             if( A(Piv[0],0) == real_t(0) ){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:95:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
   95 |             if( A(Piv[0],0) == real_t(0) )
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:100:29: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, int)’
  100 |                 std::swap( A(Piv[0],0), A(0,0) );
      |                            ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>&, __gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&)’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<float>’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::fpos<_StateT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::allocator<_CharT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::pair<_T1, _T2>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::tuple<_UTypes ...>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<float>’ is not derived from ‘const std::array<_Tp, _Nm>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>&, std::complex<float>&)’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘std::complex<float>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<float>’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::fpos<_StateT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::allocator<_CharT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::pair<_T1, _T2>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::tuple<_UTypes ...>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<float>’ is not derived from ‘const std::array<_Tp, _Nm>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<float>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>&, std::complex<float>&)’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<float>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘std::complex<float>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp: In instantiation of ‘int tlapack::getrf_level0(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:72:32:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<float>, std::allocator<std::complex<float> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:77:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   77 |             if (A(Piv[j],j)==real_t(0)){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::fpos<_StateT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::allocator<_CharT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::pair<_T1, _T2>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<float>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<float>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::tuple<_UTypes ...>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘float’ and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} is not derived from ‘const std::array<_Tp, _Nm>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:86:30: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   86 |                     A(j,i)= A(Piv[j],i);
      |                             ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:87:22: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type&, idx_t&)’
   87 |                     A(Piv[j],i)= tmp;
      |                     ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<float>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<float> >, std::complex<float> >::value_type’ {aka ‘std::complex<float>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp: In instantiation of ‘int tlapack::getrf_recursive(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:70:35:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:79:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
   79 |             if( A(Piv[0],0) == real_t(0) ){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:95:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
   95 |             if( A(Piv[0],0) == real_t(0) )
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘int’)
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘int’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:99:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
   99 |             if( Piv[0]!=0)
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:100:29: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, int)’
  100 |                 std::swap( A(Piv[0],0), A(0,0) );
      |                            ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:121:27: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
  121 |                 if (Piv[j]!=j){
      |                     ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>&, __gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&)’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:123:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  123 |                     auto vect2=tlapack::row(A1,Piv[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<double>’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::fpos<_StateT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::allocator<_CharT>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::pair<_T1, _T2>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::tuple<_UTypes ...>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:152:28: note:   ‘std::complex<double>’ is not derived from ‘const std::array<_Tp, _Nm>’
  152 |                 if (Piv0[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>&, std::complex<double>&)’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:154:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  154 |                     auto vect2=tlapack::row(A1,Piv0[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘std::complex<double>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: error: no match for ‘operator!=’ (operand types are ‘std::complex<double>’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::fpos<_StateT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::allocator<_CharT>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::move_iterator<_IteratorL>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::pair<_T1, _T2>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::vector<_Tp, _Alloc>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::tuple<_UTypes ...>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:181:28: note:   ‘std::complex<double>’ is not derived from ‘const std::array<_Tp, _Nm>’
  181 |                 if (Piv1[j]!=j){
      |                     ~~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘std::complex<double>’ to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: error: no matching function for call to ‘row(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>&, std::complex<double>&)’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note: candidate: ‘template<class T, class idx_t> constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::ColMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::ColMajor> >)’
  280 |     row( const legacyMatrix<T,idx_t>& A, size_type<legacyMatrix<T,idx_t>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:280:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_recursive.hpp:183:44: note:   template argument ‘tlapack::Layout::RowMajor’ does not match ‘tlapack::Layout::ColMajor’
  183 |                     auto vect2=tlapack::row(A10,Piv1[j]);
      |                                ~~~~~~~~~~~~^~~~~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:5: note: candidate: ‘constexpr auto tlapack::row(const legacyMatrix<T, idx_t, tlapack::Layout::RowMajor>&, size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> >) [with T = std::complex<double>; idx_t = long unsigned int; size_type<legacyMatrix<T, idx_t, tlapack::Layout::RowMajor> > = long unsigned int]’
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |     ^~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/plugins/legacyArray.hpp:288:109: note:   no known conversion for argument 2 from ‘std::complex<double>’ to ‘tlapack::size_type<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor> >’ {aka ‘long unsigned int’}
  288 |     row( const legacyMatrix<T,idx_t,Layout::RowMajor>& A, size_type<legacyMatrix<T,idx_t,Layout::RowMajor>> rowIdx ) noexcept {
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp: In instantiation of ‘int tlapack::getrf_level0(matrix_t&, vector_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf.hpp:72:32:   required from ‘int tlapack::getrf(matrix_t&, vector_t&, const getrf_opts_t&) [with matrix_t = legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>; vector_t = std::vector<std::complex<double>, std::allocator<std::complex<double> > >]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:213:24:   required from ‘void CATCH2_INTERNAL_TEMPLATE_TEST_0() [with TestType = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘void {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::reg_test(TypeList<Type>, Catch::NameAndTags) [with Type = tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from ‘{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::CATCH2_INTERNAL_TEMPLATE_TEST_1<Types>::CATCH2_INTERNAL_TEMPLATE_TEST_1() [with Types = {{anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::ColMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<float>, long unsigned int, tlapack::Layout::RowMajor, 0> >, {anonymous}::ns_CATCH2_INTERNAL_TEMPLATE_TEST_1::TypeList<tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor, 0> >}]’
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/test/src/test_eispack_comqr_schurToEigen.cpp:30:1:   required from here
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:77:18: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   77 |             if (A(Piv[j],j)==real_t(0)){
      |                 ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: error: no match for ‘operator!=’ (operand types are ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::fpos<_StateT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  226 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/allocator.h:226:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::allocator<_CharT>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  458 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:458:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  503 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:503:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::reverse_iterator<_Iterator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1675 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1675:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1741 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_iterator.h:1741:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::move_iterator<_IteratorL>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  670 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_pair.h:670:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::pair<_T1, _T2>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:575:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  575 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:575:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:581:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  581 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:581:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘std::complex<double>’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/string_view:588:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  588 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/string_view:588:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘std::basic_string_view<_CharT, _Traits>’ and ‘long unsigned int’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3653 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3653:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3666 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3666:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const _CharT*’ and ‘std::complex<double>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3678 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/basic_string.h:3678:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2081 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/stl_vector.h:2081:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::vector<_Tp, _Alloc>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  241 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/streambuf_iterator.h:241:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/tuple:1551:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_UTypes ...>&)’
 1551 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/tuple:1551:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::tuple<_UTypes ...>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:483:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const complex<_Tp>&)’
  483 |     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:483:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:488:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const complex<_Tp>&, const _Tp&)’
  488 |     operator!=(const complex<_Tp>& __x, const _Tp& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:488:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   deduced conflicting types for parameter ‘const _Tp’ (‘double’ and ‘idx_t’ {aka ‘long unsigned int’})
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/complex:493:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator!=(const _Tp&, const complex<_Tp>&)’
  493 |     operator!=(const _Tp& __x, const complex<_Tp>& __y)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/complex:493:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::complex<_Tp>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(const function<_Res(_ArgTypes ...)>&, nullptr_t)’
  736 |     operator!=(const function<_Res(_Args...)>& __f, nullptr_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:736:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::function<_Res(_ArgTypes ...)>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note: candidate: ‘template<class _Res, class ... _Args> bool std::operator!=(nullptr_t, const function<_Res(_ArgTypes ...)>&)’
  742 |     operator!=(nullptr_t, const function<_Res(_Args...)>& __f) noexcept
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/std_function.h:742:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   mismatched types ‘const std::function<_Res(_ArgTypes ...)>’ and ‘idx_t’ {aka ‘long unsigned int’}
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2141 |     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2141:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note: candidate: ‘template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc> bool std::operator!=(const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&, const unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>&)’
 2155 |     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,
      |     ^~~~~~~~
/usr/include/c++/12.2.1/bits/unordered_map.h:2155:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/array:333:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator!=(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  333 |     operator!=(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/12.2.1/array:333:5: note:   template argument deduction/substitution failed:
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:82:23: note:   ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} is not derived from ‘const std::array<_Tp, _Nm>’
   82 |             if (Piv[j]!=j) {
      |                 ~~~~~~^~~
/usr/include/c++/12.2.1/system_error:416:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:416:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  416 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:421:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:421:32: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_code&’
  421 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:426:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:426:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  426 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/12.2.1/system_error:431:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  431 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/12.2.1/system_error:431:37: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘const std::error_condition&’
  431 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:86:30: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   86 |                     A(j,i)= A(Piv[j],i);
      |                             ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/lapack/getrf_level0.hpp:87:22: error: no match for call to ‘(tlapack::legacyMatrix<std::complex<double>, long unsigned int, tlapack::Layout::RowMajor>) (__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type&, idx_t&)’
   87 |                     A(Piv[j],i)= tmp;
      |                     ~^~~~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:9: note: candidate: ‘constexpr T& tlapack::legacyMatrix<T, idx_t, L, <anonymous> >::operator()(idx_t, idx_t) const [with T = std::complex<double>; idx_t = long unsigned int; tlapack::Layout L = tlapack::Layout::RowMajor; typename std::enable_if<((L == tlapack::Layout::RowMajor) || (L == tlapack::Layout::ColMajor)), int>::type <anonymous> = 0]’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |         ^~~~~~~~
/home/lidesia/Documents/CUDenver/RAShip/gitRepos/tlapack/include/tlapack/base/legacyArray.hpp:35:27: note:   no known conversion for argument 1 from ‘__gnu_cxx::__alloc_traits<std::allocator<std::complex<double> >, std::complex<double> >::value_type’ {aka ‘std::complex<double>’} to ‘long unsigned int’
   35 |         operator()( idx_t i, idx_t j ) const noexcept {
      |                     ~~~~~~^
[2/6] Building CXX object test/src/CMakeFiles/test_getri.dir/test_getri.cpp.o
[3/6] Building CXX object test/src/CMakeFiles/test_eispack_hqr_schurToEigen.dir/test_eispack_hqr_schurToEigen.cpp.o
ninja: build stopped: subcommand failed.
